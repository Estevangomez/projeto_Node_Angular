import { LoginService } from './../../providers/login.service';
import { Usuario } from './../../interfaces/usuario';
import { Linha } from './../../interfaces/linha';


import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { ApiService } from './../../providers/posto-trabalho.service';
import { HttpClient } from '@angular/common/http';
import {FormControl, FormGroup, Validators,FormBuilder } from "@angular/forms";
import { HttpClientModule } from '@angular/common/http';
import { map } from 'rxjs/operators';
import {Observable} from 'rxjs';
import { UtilsService } from '../../utils/utils.service';
import { stringify } from 'querystring';


@Component({
  selector: 'app-form-login',
  templateUrl: './form-login.component.html',
  
})
export class FormLoginComponent implements OnInit {
  
  private usuario:Usuario =  new Usuario();
  private idLinha:Linha;
  private loginForm: FormGroup;
  private imgSrc: string;
  private error: string

  
  private nome:string;
  
  private usersdigitais:any[];
  private urlBiometria = '';
  private LinhaByIdEmpresa:any[]; 
  
  private empresas = [];
  empresa:FormControl = new FormControl();
  
  private linhas = [];
  linha:FormControl = new FormControl();
  private familias = [];
  familia:FormControl = new FormControl();
  
  digital:FormControl = new FormControl();
  
  
  srcImagem:string = '/assets/imagens/logo-posto-trabalho.png';
  imgBtnAcess:string = '/assets/imagens/btn-acesso.png'
  
  // mostrarMenusEmitter = new EventEmitter<boolean>();
  
  constructor(private router: Router, private login:LoginService,private apiService:ApiService,private http: HttpClient) { }
  
  ngOnInit() {
    
    this.loginForm = new FormGroup({
      linha: new FormControl('', {validators: [Validators.required], updateOn:'blur'}),
      empresa: new FormControl('', {validators: [Validators.required]}),
      familia: new FormControl('', {validators: [Validators.required]})
    })
    
    this.getEmpresa();
    this.getFamilia();
    
  }
  
  /*******************************BIOMETRICO  ********************************** */
  
  logar(){  
    
    if(this.loginForm.controls['linha'].value == "" || this.loginForm.controls['familia'].value == ""){
      alert(" Linha e Família não podem estar vazias");
    }     
    else {
      this.apiService.getUsersDigitais().subscribe((dataD:any)=>{      

        let param = JSON.stringify(dataD.result)

        this.apiService.getUrlBiometria(param).subscribe(dataU =>{
          let vetor = dataD.result;          
          
          this.usuario = vetor[dataU.indice];
          this.linha = this.loginForm.controls['linha'].value;
          this.familia =  this.loginForm.controls['familia'].value;         
          
          this.login.logar(this.usuario,this.linha,this.familia);

        })             
      });
    }
    
  } 
  
  /***************************************************************************************** */  
  getUsersCadastrados(){
    this.apiService.getUsersDigitais()
    .subscribe((data:any)=>{
      this.usersdigitais = data.result;    
      
    })    
  }
  /******************************************** */
  getFamilia() {     
    this.apiService.getFamilia()
    .subscribe((data:any)=>{
      this.familias = data.result;  
      
    }) 
    
  }
  /********************************************** */
  getLinha(e:any){ 
    this.apiService.getLinhaByIdEmpresa(e.target.value).subscribe((
      data:any) => {  
        this.linhas = data.result
        
      }
      );
      
    }
    
    getEmpresa(){
      
      this.empresas = [
        {
          id: 0,
          empresa:"Selecione uma Empresa"
        },
        {
          id: 1,
          empresa:"Digiboard"
        }
      ]
      this.loginForm.controls['empresa'].setValue(this.empresas[0].id);
      
      
      /*  this.apiService.getFamilia()
      .subscribe((data:any)=>{
        this.familia = data.result;   
        console.log(this.familia);
        
        
      })     */
    }
    
    
    
    
  }
  
  