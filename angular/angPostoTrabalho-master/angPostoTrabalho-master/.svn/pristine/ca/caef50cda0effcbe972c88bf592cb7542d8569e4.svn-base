import * as tslib_1 from "tslib";
import { Usuario } from './../../interfaces/usuario';
import { Component } from '@angular/core';
import { FormControl, FormGroup, Validators } from "@angular/forms";
var FormLoginComponent = /** @class */ (function () {
    // mostrarMenusEmitter = new EventEmitter<boolean>();
    function FormLoginComponent(router, login, apiService, http) {
        this.router = router;
        this.login = login;
        this.apiService = apiService;
        this.http = http;
        this.usuario = new Usuario();
        this.urlBiometria = '';
        this.empresas = [];
        this.empresa = new FormControl();
        this.linhas = [];
        this.linha = new FormControl();
        this.familias = [];
        this.familia = new FormControl();
        this.digital = new FormControl();
        this.srcImagem = '/assets/imagens/logo-posto-trabalho.png';
        this.imgBtnAcess = '/assets/imagens/btn-acesso.png';
    }
    FormLoginComponent.prototype.ngOnInit = function () {
        this.loginForm = new FormGroup({
            linha: new FormControl('', { validators: [Validators.required], updateOn: 'blur' }),
            empresa: new FormControl('', { validators: [Validators.required] }),
            familia: new FormControl('', { validators: [Validators.required] })
        });
        this.getEmpresa();
        this.getFamilia();
    };
    /*******************************BIOMETRICO  ********************************** */
    FormLoginComponent.prototype.logar = function () {
        var _this = this;
        if (this.loginForm.controls['linha'].value == "") {
            alert(" Selecione uma Linha ");
        }
        else {
            this.apiService.getUrlBiometria().subscribe(function (dataD) {
                var user = {
                    digital: dataD,
                    empresa: _this.loginForm.controls['empresa'].value
                };
                _this.login.logar(user);
            });
        }
    };
    /***************************************************************************************** */
    FormLoginComponent.prototype.getUsersCadastrados = function () {
        var _this = this;
        this.apiService.getUsersDigitais()
            .subscribe(function (data) {
            _this.usersdigitais = data.result;
        });
    };
    /******************************************** */
    FormLoginComponent.prototype.getFamilia = function () {
        var _this = this;
        this.apiService.getFamilia()
            .subscribe(function (data) {
            _this.familias = data.result;
        });
    };
    /********************************************** */
    FormLoginComponent.prototype.getLinha = function (e) {
        var _this = this;
        this.apiService.getLinhaByIdEmpresa(e.target.value).subscribe(function (data) {
            _this.linhas = data.result;
        });
    };
    FormLoginComponent.prototype.getEmpresa = function () {
        this.empresas = [
            {
                id: 0,
                empresa: "Selecione uma Empresa"
            },
            {
                id: 1,
                empresa: "Digiboard"
            }
        ];
        this.loginForm.controls['empresa'].setValue(this.empresas[0].id);
        /*  this.apiService.getFamilia()
        .subscribe((data:any)=>{
          this.familia = data.result;
          console.log(this.familia);
          
          
        })     */
    };
    FormLoginComponent.prototype.identificar = function (codPt) {
        console.log(codPt);
        var err, payload;
        var result = false;
        var DEVICE_AUTO_DETECT = 255;
        var objNBioBSP = new ActiveXObject('NBioBSPCOM.NBioBSP.1'); // Cria o objeto principal
        var objDevice = objNBioBSP.Device; // Objeto com os m�todos que abre e fecha o sensor
        var objExtraction = objNBioBSP.Extraction; //Objeto que com m�todos de captura
        var objMatching = objNBioBSP.Matching; //Objeto com os m�todos de verifica��o do tipo 1:1. N�o usado neste sistema.
        var objIndexSearch = objNBioBSP.IndexSearch; // Cria o IndexSearch: Bando de digitias que ficar� armazenado na mem�ria do pc.
        var n = 0;
        /*for ( keyVar in data ) {
          var nUserID;
          var string_digital;
          nUserID = keyVar;
          string_digital = digitais[keyVar][2];
          objIndexSearch.AddFIR(string_digital, nUserID); // Adicona os valores no IndeSearch.
        }*/
        result = false;
        // Exception handling
        try {
            // Abre o sensor
            objDevice.Open(DEVICE_AUTO_DETECT);
            err = objDevice.ErrorCode; // Get error code
            if (err != 0) {
                // Verifica se o sensor foi aberto.
                alert('Falha ao ativar o Sensor Biom�trico, verifique se o mesmo esta conectado!');
            }
            else {
                objExtraction.WindowStyle = 0; // Determinal que a captura ser� sem o POP-UP
                objExtraction.DefaultTimeout = 30000; // Determina que o tempo de captura do sensor ser� de 2 segundos
                objExtraction.Capture(0); // Realiza a captura
                if (objExtraction.TextEncodeFIR != '') {
                    //Determina que o tempo de busca no IndexSearch ser� de no m�ximo 5 segundos.
                    objIndexSearch.MaxSearchTime = 5000;
                    //Faz a identifica��o! objExtraction.TextEncodeFIR: � a string gerada. 6 � o n�vel de seguran�a (varia de 1 � 9).
                    objIndexSearch.IdentifyUser(objExtraction.TextEncodeFIR, 9);
                    if (objIndexSearch.ErrorCode == 0) {
                        //Entra neste if se o usu�rio for encontrado no IndexSearch.
                    }
                    else {
                        result = false;
                    }
                }
            }
            objDevice.Close(DEVICE_AUTO_DETECT);
        }
        catch (e) {
            alert(e.message);
            return (false);
        }
        if (result) {
            alert('TUDO OK!');
        }
        return result;
    };
    FormLoginComponent = tslib_1.__decorate([
        Component({
            selector: 'app-form-login',
            templateUrl: './form-login.component.html',
            styleUrls: ['./form-login.component.css']
        })
    ], FormLoginComponent);
    return FormLoginComponent;
}());
export { FormLoginComponent };
//# sourceMappingURL=form-login.component.js.map